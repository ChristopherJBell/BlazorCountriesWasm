@page "/countriesaddedit/{CountryId:int}"
@inject ICountryService CountryService;
@inject NavigationManager NavigationManager

@using Syncfusion.Blazor.Popups
@inject SfDialogService DialogService

<PageTitle>@pagetitle</PageTitle>

<h1>@pagetitle</h1>

<SfDialog IsModal="true" Width="500px" ShowCloseIcon="false" Visible="true">

    <h5>@pagetitle</h5>
    <br />
    <EditForm Model="@country" OnValidSubmit="@CountriesSave">
        <div>
            <SfTextBox Enabled="true" Placeholder="Country"
                       FloatLabelType="@FloatLabelType.Always"
                       @bind-Value="country.CountryName"></SfTextBox>
        </div>
        <br /><br />
        <div class="e-footer-content">
            <div class="button-container">
                <button type="submit" disabled style="display: none" aria-hidden="true"></button>
                <button type="submit" class="e-btn e-normal e-primary">Save</button>
                <button type="button" class="e-btn e-normal" @onclick="@Cancel">Cancel</button>
            </div>
        </div>
    </EditForm>

</SfDialog>

@code {
    public string pagetitle = "Add a Country";

    // Create a new, empty Countries object
    public Country? country = new Country();

    [Parameter]
    public int CountryId { get; set; }

    //Executes on page open, sets headings and gets data in the case of edit
    protected override async Task OnInitializedAsync()
    {
        if (CountryId == 0)
        {
            pagetitle = "Add a Country";
        }
        else
        {
            pagetitle = "Edit a Country";
            country = await CountryService.GetCountryById(CountryId);
        }
    }

    // Executes OnValidSubmit of EditForm above.
    protected async Task CountriesSave()
    {
        if (CountryId == 0)
        {
            //Check for duplicates
            if (await CountryService.CountCountriesForInsert(country.CountryName) == 0)
            {
                await CountryService.CountryInsert(country);
                NavigationManager.NavigateTo("/countrylist");
            }
            else
            {
                await DialogService.AlertAsync("Sorry, you can't add this country again, it already exists", "Country Already Exists");
            }
        }
        else
        {
            //Check for duplicates
            if (await CountryService.CountCountriesForEdit(country.CountryName, country.CountryId) == 0)
            {
                await CountryService.CountryUpdate(CountryId, country);
                NavigationManager.NavigateTo("/countrylist");
            }
            else
            {
                await DialogService.AlertAsync("Sorry, you can't add this country again, it already exists", "Country Already Exists");
            }
        }
    }

    //Executes if user clicks the Cancel button.
    void Cancel()
    {
        NavigationManager.NavigateTo("/countrylist");
    }

}